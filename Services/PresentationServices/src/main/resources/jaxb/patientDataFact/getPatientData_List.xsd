<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*****************************************************************************************************************
  ~  *
  ~  * Copyright (C) 2012 by Cognitive Medical Systems, Inc (http://www.cognitivemedciine.com)
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
  ~  * with the License. You may obtain a copy of the License at
  ~  *
  ~  *     http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software distributed under the License is
  ~  * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and limitations under the License.
  ~  *
  ~  *****************************************************************************************************************/
  ~
  ~ /*****************************************************************************************************************
  ~  * Socratic Grid contains components to which third party terms apply. To comply with these terms, the following
  ~  * notice is provided:
  ~  *
  ~  * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
  ~  * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect. All rights reserved.
  ~  * Redistribution and use in source and binary forms, with or without modification, are permitted provided that
  ~  * the following conditions are met:
  ~  *
  ~  * - Redistributions of source code must retain the above copyright notice, this list of conditions and the
  ~  *     following disclaimer.
  ~  * - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
  ~  *     following disclaimer in the documentation and/or other materials provided with the distribution.
  ~  * - Neither the name of the NHIN Connect Project nor the names of its contributors may be used to endorse or
  ~  *     promote products derived from this software without specific prior written permission.
  ~  *
  ~  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
  ~  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  ~  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
  ~  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  ~  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION HOWEVER
  ~  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  ~  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  ~  *
  ~  * END OF TERMS AND CONDITIONS
  ~  *
  ~  *****************************************************************************************************************/
  -->

<!--W3C Schema generated by XMLSpy v2011 rel. 3 sp1 (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:element name="code" type="xs:string"/>
    <xs:element name="codeSystemCode" type="xs:string"/>
    <xs:element name="codeSystemName" type="xs:string"/>
    <xs:element name="columnId" type="xs:string"/>
    <xs:element name="description" type="xs:string"/>
    <xs:element name="detailTabs">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="label"/>
                <xs:element ref="type"/>
                <xs:element ref="responseType"/>
                <xs:element ref="sectionId"/>
                <xs:element ref="filters" maxOccurs="unbounded"/>
                <xs:element ref="visible"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="dose" type="xs:string"/>
    <xs:element name="duration" type="xs:string"/>
    <xs:element name="facts">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="orderDate"/>
                <xs:element ref="medication"/>
                <xs:element ref="code"/>
                <xs:element ref="codeSystemName"/>
                <xs:element ref="codeSystemCode"/>
                <xs:element ref="sig"/>
                <xs:element ref="formulation"/>
                <xs:element ref="unit"/>
                <xs:element ref="dose"/>
                <xs:element ref="route"/>
                <xs:element ref="frequency"/>
                <xs:element ref="duration"/>
                <xs:element ref="quantity"/>
                <xs:element ref="refills"/>
                <xs:element ref="prescriber"/>
                <xs:element ref="orderExpireDate"/>
                <xs:element ref="indication"/>
                <xs:element ref="source"/>
                <xs:element ref="hoverTexts" maxOccurs="unbounded"/>
                <xs:element ref="itemId"/>
                <xs:element ref="status"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="factType" type="xs:string"/>
    <xs:element name="filters" type="xs:string"/>
    <xs:element name="formatter" type="xs:string"/>
    <xs:element name="formulation" type="xs:string"/>
    <xs:element name="frequency" type="xs:string"/>
    <xs:element name="gridHeaders">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="columnId"/>
                <xs:element ref="value"/>
                <xs:element ref="description"/>
                <xs:element ref="formatter" minOccurs="0"/>
                <xs:element ref="width"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="hoverTexts" type="xs:string"/>
    <xs:element name="indication" type="xs:string"/>
    <xs:element name="itemId" type="xs:string"/>
    <xs:element name="label" type="xs:string"/>
    <xs:element name="maxColumns" type="xs:int"/>
    <xs:element name="medication" type="xs:string"/>
    <xs:element name="orderDate" type="xs:string"/>
    <xs:element name="orderExpireDate" type="xs:string"/>
    <xs:element name="patientDataFact">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="factType"/>
                <xs:element ref="trxnType"/>
                <xs:element ref="visibleGridHeaders"/>
                <xs:element ref="maxColumns"/>
                <xs:element ref="itemId"/>
                <xs:element ref="detailTabs" maxOccurs="unbounded"/>
                <xs:element ref="gridHeaders" maxOccurs="unbounded"/>
                <xs:element ref="facts" maxOccurs="unbounded"/>
                <xs:element ref="successStatus"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="prescriber" type="xs:string"/>
    <xs:element name="quantity" type="xs:string"/>
    <xs:element name="refills" type="xs:string"/>
    <xs:element name="responseType" type="xs:string"/>
    <xs:element name="route" type="xs:string"/>
    <xs:element name="sectionId" type="xs:string"/>
    <xs:element name="sig" type="xs:string"/>
    <xs:element name="source" type="xs:string"/>
    <xs:element name="status" type="xs:string"/>
    <xs:element name="successStatus" type="xs:boolean"/>
    <xs:element name="trxnType" type="xs:string"/>
    <xs:element name="type" type="xs:string"/>
    <xs:element name="unit" type="xs:string"/>
    <xs:element name="value" type="xs:string"/>
    <xs:element name="visible" type="xs:boolean"/>
    <xs:element name="visibleGridHeaders" type="xs:boolean"/>
    <xs:element name="width" type="xs:int"/>
</xs:schema>

 <!--
<xs:element name="formatter" type="xs:string"/>
<xs:element name="width" type="xs:int"/>
<xs:element name="visibleGridHeaders" type="xs:boolean"/>
<xs:element name="visible" type="xs:boolean"/>
<xs:element name="value" type="xs:string"/>
<xs:element name="type" type="xs:string"/>
<xs:element name="trxnType" type="xs:string"/>
<xs:element name="successStatus" type="xs:boolean"/>
<xs:element name="status" type="xs:boolean"/>
<xs:element name="responseType" type="xs:string"/>
<xs:element name="patientDataFact">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="factType"/>
            <xs:element ref="trxnType"/>
            <xs:element ref="visibleGridHeaders"/>
            <xs:element ref="maxColumns"/>
            <xs:element ref="successStatus"/>
            <xs:element ref="detailTabs" maxOccurs="unbounded"/>
            <xs:element ref="gridHeaders" maxOccurs="unbounded"/>
            <xs:element ref="facts" maxOccurs="unbounded"/>
				
        </xs:sequence>
    </xs:complexType>
</xs:element>
<xs:element name="maxColumns" type="xs:int"/>
<xs:element name="label" type="xs:string"/>
<xs:element name="itemId" type="xs:int"/>
<xs:element name="hoverTexts" type="xs:string"/>
<xs:element name="gridHeaders">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="columnId"/>
            <xs:element ref="value"/>
            <xs:element ref="description"/>
            <xs:element ref="width"/>
            <xs:element ref="formatter"/>
        </xs:sequence>
    </xs:complexType>
</xs:element>
<xs:element name="facts">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="description"/>
            <xs:element ref="code"/>
            <xs:element ref="codeSystemName"/>
            <xs:element ref="codeSystemCode"/>

            <xs:element ref="hoverTexts"/>
            <xs:element ref="itemId"/>
            <xs:element ref="status"/>
        </xs:sequence>
    </xs:complexType>
</xs:element>
<xs:element name="factType" type="xs:string"/>
<xs:element name="detailTabs">
    <xs:complexType>
        <xs:sequence>
            <xs:element ref="label"/>
            <xs:element ref="visible"/>
            <xs:element ref="type"/>
            <xs:element ref="responseType"/>
        </xs:sequence>
    </xs:complexType>
</xs:element>
<xs:element name="description" type="xs:string"/>
<xs:element name="columnId" type="xs:string"/>

<xs:element name="codeSystemName" type="xs:string"/>
<xs:element name="codeSystemCode" type="xs:string"/>
<xs:element name="code" type="xs:string"/>
</xs:schema>
-->