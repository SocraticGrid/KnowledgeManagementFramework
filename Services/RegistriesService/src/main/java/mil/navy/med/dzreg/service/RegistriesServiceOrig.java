
/*
 * ****************************************************************************************************************
 *  *
 *  * Copyright (C) 2012 by Cognitive Medical Systems, Inc (http://www.cognitivemedciine.com)
 *  *
 *  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
 *  * with the License. You may obtain a copy of the License at
 *  *
 *  *     http://www.apache.org/licenses/LICENSE-2.0
 *  *
 *  * Unless required by applicable law or agreed to in writing, software distributed under the License is
 *  * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  * See the License for the specific language governing permissions and limitations under the License.
 *  *
 *  ****************************************************************************************************************
 *
 * ****************************************************************************************************************
 *  * Socratic Grid contains components to which third party terms apply. To comply with these terms, the following
 *  * notice is provided:
 *  *
 *  * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
 *  * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect. All rights reserved.
 *  * Redistribution and use in source and binary forms, with or without modification, are permitted provided that
 *  * the following conditions are met:
 *  *
 *  * - Redistributions of source code must retain the above copyright notice, this list of conditions and the
 *  *     following disclaimer.
 *  * - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
 *  *     following disclaimer in the documentation and/or other materials provided with the distribution.
 *  * - Neither the name of the NHIN Connect Project nor the names of its contributors may be used to endorse or
 *  *     promote products derived from this software without specific prior written permission.
 *  *
 *  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
 *  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 *  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 *  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 *  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION HOWEVER
 *  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 *  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 *  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *  *
 *  * END OF TERMS AND CONDITIONS
 *  *
 *  ****************************************************************************************************************
 */

package mil.navy.med.dzreg.service;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "RegistriesService", targetNamespace = "urn:mil:navy:med:dzreg:service", wsdlLocation = "file:/Users/nhin/src/KMR/Services/RegistriesService/src/wsdl/RegistriesService.wsdl")
public class RegistriesServiceOrig
    extends Service
{

    private final static URL REGISTRIESSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(mil.navy.med.dzreg.service.RegistriesServiceOrig.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = mil.navy.med.dzreg.service.RegistriesServiceOrig.class.getResource(".");
            url = new URL(baseUrl, "file:/Users/nhin/src/KMR/Services/RegistriesService/src/wsdl/RegistriesService.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/Users/nhin/src/KMR/Services/RegistriesService/src/wsdl/RegistriesService.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        REGISTRIESSERVICE_WSDL_LOCATION = url;
    }

    public RegistriesServiceOrig(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RegistriesServiceOrig() {
        super(REGISTRIESSERVICE_WSDL_LOCATION, new QName("urn:mil:navy:med:dzreg:service", "RegistriesService"));
    }

    /**
     * 
     * @return
     *     returns RegistriesServicePortType
     */
    @WebEndpoint(name = "RegistriesServicePort")
    public RegistriesServicePortType getRegistriesServicePort() {
        return super.getPort(new QName("urn:mil:navy:med:dzreg:service", "RegistriesServicePort"), RegistriesServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RegistriesServicePortType
     */
    @WebEndpoint(name = "RegistriesServicePort")
    public RegistriesServicePortType getRegistriesServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:mil:navy:med:dzreg:service", "RegistriesServicePort"), RegistriesServicePortType.class, features);
    }

}
