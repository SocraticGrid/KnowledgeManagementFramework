<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ /*****************************************************************************************************************
  ~  *
  ~  * Copyright (C) 2012 by Cognitive Medical Systems, Inc (http://www.cognitivemedciine.com)
  ~  *
  ~  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance
  ~  * with the License. You may obtain a copy of the License at
  ~  *
  ~  *     http://www.apache.org/licenses/LICENSE-2.0
  ~  *
  ~  * Unless required by applicable law or agreed to in writing, software distributed under the License is
  ~  * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~  * See the License for the specific language governing permissions and limitations under the License.
  ~  *
  ~  *****************************************************************************************************************/
  ~
  ~ /*****************************************************************************************************************
  ~  * Socratic Grid contains components to which third party terms apply. To comply with these terms, the following
  ~  * notice is provided:
  ~  *
  ~  * TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
  ~  * Copyright (c) 2008, Nationwide Health Information Network (NHIN) Connect. All rights reserved.
  ~  * Redistribution and use in source and binary forms, with or without modification, are permitted provided that
  ~  * the following conditions are met:
  ~  *
  ~  * - Redistributions of source code must retain the above copyright notice, this list of conditions and the
  ~  *     following disclaimer.
  ~  * - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
  ~  *     following disclaimer in the documentation and/or other materials provided with the distribution.
  ~  * - Neither the name of the NHIN Connect Project nor the names of its contributors may be used to endorse or
  ~  *     promote products derived from this software without specific prior written permission.
  ~  *
  ~  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
  ~  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  ~  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
  ~  * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
  ~  * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION HOWEVER
  ~  * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  ~  * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  ~  *
  ~  * END OF TERMS AND CONDITIONS
  ~  *
  ~  *****************************************************************************************************************/
  -->

<!--
  Adapter Policy Engine WSDL
  -->
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
   xmlns="http://schemas.xmlsoap.org/wsdl/"
   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
   xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype"
   xmlns:task="urn:org:socraticgrid:common:task"
   name="AlertManager"
   targetNamespace="urn:org:socraticgrid:alertmanager"
   xmlns:tns="urn:org:socraticgrid:alertmanager">
  <documentation>Alert Manager</documentation>
  <types>
    <xsd:schema>
      <xsd:import namespace="urn:org:socraticgrid:common:task"
                  schemaLocation="../schemas/nhinc/common/Task.xsd"/>
    </xsd:schema>
  </types>
  
  <message name="UpdateAlertRequestMessage">
    <part name="UpdateAlertRequest"
          element="task:UpdateAlertRequest"/>
  </message>
  <message name="UpdateAlertResponseMessage">
    <part name="UpdateAlertResponse"
          element="task:UpdateAlertResponse"/>
  </message>
  <message name="GetAlertFactsRequestMessage">
    <part name="GetAlertFactsRequest"
          element="task:GetAlertFactsRequest"/>
  </message>
  <message name="GetAlertFactsResponseMessage">
    <part name="GetAlertFactsResponse"
          element="task:GetAlertFactsResponse"/>
  </message>

  <portType name="AlertManagerPortType">
    <operation name="UpdateAlert">
      <input name="UpdateAlertRequest"
             message="tns:UpdateAlertRequestMessage" />
      <output name="UpdateAlertResponse"
              message="tns:UpdateAlertResponseMessage" />
    </operation>
    <operation name="GetAlertFacts">
      <input name="GetAlertFactsRequest"
             message="tns:GetAlertFactsRequestMessage" />
      <output name="GetAlertFactsResponse"
              message="tns:GetAlertFactsResponseMessage" />
    </operation>
  </portType>
  
  <binding name="AlertManagerBindingSoap11" type="tns:AlertManagerPortType">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="UpdateAlert">
      <soap:operation soapAction="urn:UpdateAlert"/>
      <input name="UpdateAlertRequest">
        <soap:body use="literal"/>
      </input>
      <output name="UpdateAlertResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
    <operation name="GetAlertFacts">
      <soap:operation soapAction="urn:GetAlertFacts"/>
      <input name="GetAlertFactsRequest">
        <soap:body use="literal"/>
      </input>
      <output name="GetAlertFactsResponse">
        <soap:body use="literal"/>
      </output>
    </operation>
  </binding>
  
  <service name="AlertManager">
    <port name="AlertManagerPortSoap11"
          binding="tns:AlertManagerBindingSoap11">
      <soap:address 
         location="http://localhost:${HttpDefaultPort}/AlertManager/AlertManager_Service" />
    </port>
  </service>
  <plnk:partnerLinkType name="AlertManager">
    <!-- A partner link type is automatically generated when a new port type is added. 
         Partner link types are used by BPEL processes. In a BPEL process, a partner 
         link represents the interaction between the BPEL process and a partner service. 
         Each partner link is associated with a partner link type. A partner link type 
         characterizes the conversational relationship between two services. The 
         partner link type can have one or two roles.-->
    <plnk:role name="AlertManagerPortTypeRole"
               portType="tns:AlertManagerPortType"/>
  </plnk:partnerLinkType>
  
</definitions>
