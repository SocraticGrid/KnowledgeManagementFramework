
package gov.va.medora.mdws.emrsvc;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "EmrSvc", targetNamespace = "http://mdws.medora.va.gov/EmrSvc", wsdlLocation = "file:/Users/tnguyen/VirtualBox-Shared/CDS/trunk.KMR2redo/projects/KMR/Services/Common/KMROLib/src/wsdl/mdws2/EmrSvc.asmx.wsdl")
public class EmrSvc
    extends Service
{

    private final static URL EMRSVC_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(gov.va.medora.mdws.emrsvc.EmrSvc.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = gov.va.medora.mdws.emrsvc.EmrSvc.class.getResource(".");
            url = new URL(baseUrl, "file:/home/nhin/Properties/wsdl/EmrSvc.asmx.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/home/nhin/Properties/wsdl/EmrSvc.asmx.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        EMRSVC_WSDL_LOCATION = url;
    }

    public EmrSvc(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmrSvc() {
        super(EMRSVC_WSDL_LOCATION, new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvc"));
    }

    /**
     * 
     * @return
     *     returns EmrSvcSoap
     */
    @WebEndpoint(name = "EmrSvcSoap")
    public EmrSvcSoap getEmrSvcSoap() {
        EmrSvcSoap emrSvcSoap = super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcSoap"), EmrSvcSoap.class);

        //===========================
        // !!!  REQUIRED ADDITION !!!
        //===========================
        ((BindingProvider)emrSvcSoap).getRequestContext().put(BindingProvider.SESSION_MAINTAIN_PROPERTY, true);

        return emrSvcSoap;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmrSvcSoap
     */
    @WebEndpoint(name = "EmrSvcSoap")
    public EmrSvcSoap getEmrSvcSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcSoap"), EmrSvcSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns EmrSvcSoap
     */
    @WebEndpoint(name = "EmrSvcSoap12")
    public EmrSvcSoap getEmrSvcSoap12() {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcSoap12"), EmrSvcSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmrSvcSoap
     */
    @WebEndpoint(name = "EmrSvcSoap12")
    public EmrSvcSoap getEmrSvcSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcSoap12"), EmrSvcSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns EmrSvcHttpGet
     */
    @WebEndpoint(name = "EmrSvcHttpGet")
    public EmrSvcHttpGet getEmrSvcHttpGet() {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcHttpGet"), EmrSvcHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmrSvcHttpGet
     */
    @WebEndpoint(name = "EmrSvcHttpGet")
    public EmrSvcHttpGet getEmrSvcHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcHttpGet"), EmrSvcHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns EmrSvcHttpPost
     */
    @WebEndpoint(name = "EmrSvcHttpPost")
    public EmrSvcHttpPost getEmrSvcHttpPost() {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcHttpPost"), EmrSvcHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmrSvcHttpPost
     */
    @WebEndpoint(name = "EmrSvcHttpPost")
    public EmrSvcHttpPost getEmrSvcHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://mdws.medora.va.gov/EmrSvc", "EmrSvcHttpPost"), EmrSvcHttpPost.class, features);
    }

}
